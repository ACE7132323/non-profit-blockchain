swagger: "2.0"
info:
  description: "This is API for the NGO REST API donation application supported by Hyperlegder Fabric"
  version: "1.0.0"
  title: "NGO Donation and Spend Tracking"
  termsOfService: "https://aws.amazon.com/service-terms/"
  contact:
    email: "edgema@amazon.com"
  license:
    name: "MIT-0"
    url: "https://github.com/aws/mit-0"
host: "Fabric-ELB-205962472.us-west-2.elb.amazonaws.com"
basePath: "/"
tags:
- name: "user"
  description: "User-related Operations"
- name: "donor"
  description: "Donor-related Operations"
- name: "ngo"
  description: "NGO-related Operations"
- name: "donation"
  description: "Donation-related Operations"
- name: "spend"
  description: "Spend-related Operations"
- name: "rating"
  description: "Rating-related Operations"
schemes:
- "http"
paths:
  /users:
    post:
      tags:
      - "user"
      summary: "Register/enroll a user"
      description: ""
      consumes:
        - "application/x-www-form-urlencoded"
        - "multipart/form-data"
      parameters:
        - in: formData
          name: username
          type: string
          description: "User name"
          required: true
        - in: formData
          name: orgName
          type: string
          description: "Organization name"
          required: true
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
        405:
          description: "Invalid input"
  /donor:
    post:
      tags:
      - "donor"
      summary: "Create a donor"
      consumes:
      - "application/json"
      parameters:
        - in: body
          name: donor
          description: "The donor to create."
          schema:
            $ref: "#/definitions/Donor"
      produces:
      - "text/html; charset=utf-8"
      - "application/json"
      responses:
        200:
          description: "Transaction ID"
    get:
      tags:
      - "donor"
      summary: "Get all donors"
      operationId: "getAllDonors"
      produces:
        - "application/json"
      responses:
        200:
          description: "Array of Donor objects"
          schema:
            $ref: "#/definitions/ArrayOfDonors"
  /donor/{donorUsername}:
    get:
      tags:
      - "donor"
      summary: Get a specific donor
      parameters:
        - in: path
          name: donorUsername
          type: string
          required: true
          description: username of the donor to get
      produces:
        - "application/json"
      responses:
        200:
          description: "A Donor object"
          schema:
            $ref: "#/definitions/Donor"
  /donation:
    post:
      tags:
      - "donation"
      summary: "Create a donation"
      consumes:
      - "application/json"
      parameters:
        - in: body
          name: donation
          description: "The donation to create."
          schema:
            $ref: "#/definitions/Donation"
      produces:
      - "text/html; charset=utf-8"
      - "application/json"
      responses:
        200:
          description: "Transaction ID"
    get:
      tags:
      - "donation"
      summary: "Get all donation"
      operationId: "getAllDonation"
      produces:
        - "application/json"
      responses:
        200:
          description: "Array of Donation objects"
          schema:
            $ref: "#/definitions/ArrayOfDonations"
  /donation/{donorUsername}:
    get:
      tags:
      - "donation"
      summary: "Get donations for a Donor"
      operationId: "getDonationsForDonor"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: donorUsername
          type: string
          required: true
          description: username of the donor to get donation information
      responses:
        200:
          description: "Array of Donation objects"
          schema:
            $ref: "#/definitions/ArrayOfDonations"
  # /donation/{ngo}:
  #   get:
  #     tags:
  #     - "donation"
  #     summary: "Get donations for an NGO"
  #     operationId: "getDonationsForNGO"
  #     produces:
  #       - "application/json"
  #     parameters:
  #       - in: path
  #         name: ngo
  #         type: string
  #         required: true
  #         description: ID of the NGO to get donation information
  #     responses:
  #       200:
  #         description: "Array of Donation objects"
  #         schema:
  #           $ref: "#/definitions/ArrayOfDonations"
  /ngo:
    post:
      tags:
      - "ngo"
      summary: "Create an NGO"
      consumes:
      - "application/json"
      parameters:
        - in: body
          name: ngo
          description: "The NGO to create."
          schema:
            $ref: "#/definitions/NGO"
      produces:
      - "text/html; charset=utf-8"
      responses:
        200:
          description: "Transaction ID"
    get:
      tags:
      - "ngo"
      summary: "Get all NGOs"
      operationId: "getAllNGO"
      produces:
        - "application/json"
      responses:
        200:
          description: "Array of NGO objects"
          schema:
            $ref: "#/definitions/ArrayOfNGOs"
  /ngo/{ngo}:
    get:
      tags:
      - "ngo"
      summary: "Get a specific NGO"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: ngo
          type: string
          required: true
          description: ID of the NGO to get NGO information
      responses:
        200:
          description: "an NGO object"
          schema:
            $ref: "#/definitions/NGO"
  /spend:
    post:
      tags:
      - "spend"
      summary: "Create a spend record"
      consumes:
      - "application/json"
      parameters:
        - in: body
          name: donor
          description: "The spend record to create."
          schema:
            $ref: "#/definitions/Spend"
      produces:
      - "text/html; charset=utf-8"
      - "application/json"
      responses:
        200:
          description: "Transaction ID"
    get:
      tags:
      - "spend"
      summary: "Get all Spending records"
      operationId: "getAllSpends"
      produces:
        - "application/json"
      responses:
        200:
          description: "Array of Spend objects"
          schema:
            $ref: "#/definitions/ArrayOfSpends"
  /spend/{ngo}:
    get:
      tags:
      - "spend"
      summary: "Get spending records for a specific NGO"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: ngo
          type: string
          required: true
          description: ID of the NGO to get spending records
      responses:
        200:
          description: "Array of Spending objects"
          schema:
            $ref: "#/definitions/Spend"
  /spendallocation:
    get:
      tags:
      - "spend"
      summary: "Get all Spending allocations"
      operationId: "getAllSpendAllocations"
      produces:
        - "application/json"
      responses:
        200:
          description: "Array of SpendAllocation objects"
          schema:
            $ref: "#/definitions/ArrayOfSpendAllocations"
definitions:
  Donor:
    type: object
    properties:
      docType:
        type: string
      donorUserName:
        type: string
      email:
        type: string
      registeredDate:
        type: string
        format: date
  NGO:
    type: object
    properties:
      docType:
        type: string
      address:
        type: string
      contactEmail:
        type: string
      contactNumber:
        type: string
      ngoDescription:
        type: string
      ngoName:
        type: string
      ngoRegistrationNumber:
        type: string
  Donation:
    type: object
    properties:
      docType:
        type: string
      donationAmount:
        type: integer
      donationDate:
        type: string
        format: date-time
      donationId:
        type: string
      donor:
        type: string
      ngo:
        type: string
  Spend:
    type: object
    properties:
      docType:
        type: string
      ngo:
        type: string
      spendAmount:
        type: integer
      spendDate:
        type: string
        format: date-time
      spendDescription:
        type: string
      spendId:
        type: string
  SpendAllocation:
    type: object
    properties:
      docType:
        type: string
      donation:
        type: string
      ngo:
        type: string
      spendAllocationDate:
        type: string
        format: date-time
      spendAllocationDescription:
        type: string
      spendAllocationId:
        type: string
  ArrayOfDonations:
    type: array
    items:
      $ref: "#/definitions/Donation"
  ArrayOfNGOs:
    type: array
    items:
      $ref: "#/definitions/NGO"
  ArrayOfDonors:
    type: array
    items:
      $ref: "#/definitions/Donor"
  ArrayOfSpends:
    type: array
    items:
      $ref: "#/definitions/Spend"
  ArrayOfSpendAllocations:
    type: array
    items:
      $ref: "#/definitions/SpendAllocation"
